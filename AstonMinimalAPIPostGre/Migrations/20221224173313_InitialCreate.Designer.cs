// <auto-generated />
using System;
using AstonMinimalAPIPostGre;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AstonMinimalAPIPostGre.Migrations
{
    [DbContext(typeof(MyApplicationDbContext))]
    [Migration("20221224173313_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AstonMinimalAPIPostGre.Models.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("FilmId");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("AstonMinimalAPIPostGre.Models.Person", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Homeworld")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("ItemId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("AstonMinimalAPIPostGre.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("FilmId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("VehicleId");

                    b.HasIndex("FilmId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("FilmPerson", b =>
                {
                    b.Property<int>("FilmsFilmId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonItemId")
                        .HasColumnType("integer");

                    b.HasKey("FilmsFilmId", "PersonItemId");

                    b.HasIndex("PersonItemId");

                    b.ToTable("FilmPerson");
                });

            modelBuilder.Entity("AstonMinimalAPIPostGre.Models.Person", b =>
                {
                    b.HasOne("AstonMinimalAPIPostGre.Models.Vehicle", "vehicle")
                        .WithMany("Pilots")
                        .HasForeignKey("VehicleId");

                    b.Navigation("vehicle");
                });

            modelBuilder.Entity("AstonMinimalAPIPostGre.Models.Vehicle", b =>
                {
                    b.HasOne("AstonMinimalAPIPostGre.Models.Film", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("FilmId");
                });

            modelBuilder.Entity("FilmPerson", b =>
                {
                    b.HasOne("AstonMinimalAPIPostGre.Models.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsFilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AstonMinimalAPIPostGre.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AstonMinimalAPIPostGre.Models.Film", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("AstonMinimalAPIPostGre.Models.Vehicle", b =>
                {
                    b.Navigation("Pilots");
                });
#pragma warning restore 612, 618
        }
    }
}
